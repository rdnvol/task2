{% comment %}
    NOTE:
  Renders an image
    Accepts:
    - asset_img_url: {boolean} if true renders an image from assets folder
    - asset_url: {boolean} if true renders an svg from assets folder
    - metafield: {boolean} for render image from metafield
    - data_attribute: {string} for render additional attributes
    - class: {string} additional classes.
    - src: {string} or {object} mobile image name you want to render (example 'image.png' or section.settings.image)
    - m: {string} mobile width and height of image for image_url filter
    - src_t: {string} or {object} tablet image name you want to render (example 'image.png' or section.settings.image)
    - t: {string} tablet width and height of image for image_url filter
    - src_d: {string} or {object} desktop image name you want to render (example 'image.png' or section.settings.image)
    - d: {string} desktop width and height of image for image_url filter (example only width '650x', only height 'x650', both '650x650');
    - crop: {string} for cropping image if needed (example 'center', 'left', 'right')
    - alt: {string} alt attribute (example 'image' or section.settings.image.alt or section.settings.image_alt)('image description' by default)
    - lazyload: {boolean} for lazyload image (true by default);
    - fetchpriority: {string}. value = 'high', 'low', 'auto'. by default 'auto'; more details about fetchpriority https://web.dev/fetch-priority

    for usage:

  {% render
    'image',
    asset_img_url: true,
    data_attribute: 'disabled',
    class: 'another-class',
    src: 'image-src.png',
    m: '375x',
    src_t: 'image-src-t.png',
    t: '375x',
    src_d: 'image-src.png',
    d: '650x',
    crop: 'center',
    alt: 'image-description'
  %}

    with svg
  {% render
    'image',
    asset_url: true,
    class: 'another-class',
    src: 'logo-2.svg',
    m: '375x',
    alt: 'image-description'
  %}

    with metafield (accentuate)
  {% render
    'image',
    metafield: true
    src: 'test-image-mobile.png?options=',
    m: 'w_120,h_260',
    src_d: 'test-image-desktop.png?options=',
    d: 'w_430',
  %}
{% endcomment %}

{% liquid
  assign m = m | default: 'master'
  assign d = d | default: m
  assign t = t | default: d

  if metafield
    assign src_tablet = src_t | default: src
    assign src_desktop = src_d | default: src

    assign m_size_arr = m | split: ','
    assign m_width = m_size_arr | first | split: 'w_' | last
    assign m_height = m_size_arr | last | split: 'h_' | last

    assign t_size_arr = t | split: ','
    assign t_width = t_size_arr | first | split: 'w_' | last
    assign t_height = t_size_arr | last | split: 'h_' | last

    assign d_size_arr = d | split: ','
    assign d_width = d_size_arr | first | split: 'w_' | last
    assign d_height = d_size_arr | last | split: 'h_' | last

  else
    assign src_tablet = src_t | default: src
    assign src_desktop = src_d | default: src

    assign m_size_arr = m | split: 'x'
    assign m_width = m_size_arr[0]
    assign m_height = m_size_arr[1]
    if m_height == blank
      assign m_height = m_width | divided_by: src.aspect_ratio | floor
    endif

    assign t_size_arr = t | split: 'x'
    assign t_width = t_size_arr[0]
    assign t_height = t_size_arr[1]
    if t_height == blank
      assign t_height = t_width | divided_by: src.aspect_ratio | floor
    endif

    assign d_size_arr = d | split: 'x'
    assign d_width = d_size_arr[0]
    assign d_height = d_size_arr[1]
    if d_height == blank
      assign d_height = d_width | divided_by: src.aspect_ratio | floor
    endif
  endif

  comment
    check if height passed
    Mobile image
  endcomment

  if metafield
    assign m2x_width = m_width | times: 2 | prepend: 'w_'
    assign m2x_height = m_height | times: 2 | prepend: 'h_'
    if m_size_arr.size == 2
      assign m2x = m2x_width | append: ',' | append: m2x_height
    else
      assign m2x = m2x_width
    endif
  else
    assign m2x_width = m_width | times: 2
    assign m2x_height = m_height | times: 2
    if m_size_arr.size == 2
      assign m2x = m2x_width | append: 'x' | append: m2x_height
    else
      assign m2x = m2x_width | append: 'x'
    endif
  endif

  comment
    check if height passed
    Tablet image
  endcomment

  if metafield
    assign t2x_width = t_width | times: 2 | prepend: 'w_'
    assign t2x_height = t_height | times: 2 | prepend: 'h_'
    if t_size_arr.size == 2
      assign t2x = t2x_width | append: ',' | append: t2x_height
    else
      assign t2x = t2x_width
    endif
  else
    assign t2x_width = t_width | times: 2
    assign t2x_height = t_height | times: 2
    if t_size_arr.size == 2
      assign t2x = t2x_width | append: 'x' | append: t2x_height
    else
      assign t2x = t2x_width | append: 'x'
    endif
  endif

    comment
      check if height passed
      Desktop image
    endcomment

  if metafield
    assign d2x_width = d_width | times: 2 | prepend: 'w_'
    assign d2x_height = d_height | times: 2 | prepend: 'h_'
    if d_size_arr.size == 2
      assign d2x = d2x_width | append: ',' | append: d2x_height
    else
      assign d2x = d2x_width
    endif
  else
    assign d2x_width = d_width | times: 2
    assign d2x_height = d_height | times: 2
    if d_size_arr.size == 2
      assign d2x = d2x_width | append: 'x' | append: d2x_height
    else
      assign d2x = d2x_width | append: 'x'
    endif
  endif

  assign classes = class | default: false

  if lazyload == false
    assign lazyload = false
  else
    assign lazyload = true
  endif

  comment
    Check if crop filter is present
  endcomment

  if src contains "img-placeholder"
    assign crop = 'center'
  else
    assign crop = crop | default: false
  endif

  if asset_img_url
    if crop
      assign m_src = src | asset_img_url: m, crop: crop
      assign m_src_2x = src | asset_img_url: m2x, crop: crop
      assign m_srcset = m_src | append: ", " | append: m_src_2x | append: ' 2x'

      assign t_src = src_tablet | asset_img_url: t, crop: crop
      assign t_src_2x = src_tablet | asset_img_url: t2x, crop: crop
      assign t_srcset = t_src | append: ", " | append: t_src_2x | append: ' 2x'

      assign d_src = src_desktop | asset_img_url: d, crop: crop
      assign d_src_2x = src_desktop | asset_img_url: d2x, crop: crop
      assign d_srcset = d_src | append: ", " | append: d_src_2x | append: ' 2x'

    else
      assign m_src = src | asset_img_url: m
      assign m_src_2x = src | asset_img_url: m2x
      assign m_srcset = m_src | append: ", " | append: m_src_2x | append: ' 2x'

      assign t_src = src_tablet | asset_img_url: t
      assign t_src_2x = src_tablet | asset_img_url: t2x
      assign t_srcset = t_src | append: ", " | append: t_src_2x | append: ' 2x'

      assign d_src = src_desktop | asset_img_url: d
      assign d_src_2x = src_desktop | asset_img_url: d2x
      assign d_srcset = d_src | append: ", " | append: d_src_2x | append: ' 2x'

    endif
  elsif asset_url
    assign m_src = src | asset_url
  elsif metafield
    assign m_src = src | append: m
    assign m_src_2x = src | append: m2x
    assign m_srcset = m_src | append: ", " | append: m_src_2x | append: ' 2x'

    assign t_src = src_tablet | append: t
    assign t_src_2x = src_tablet | append: t2x
    assign t_srcset = t_src | append: ", " | append: t_src_2x | append: ' 2x'

    assign d_src = src_desktop | append: d
    assign d_src_2x = src_desktop | append: d2x
    assign d_srcset = d_src | append: ", " | append: d_src_2x | append: ' 2x'
  else
    comment
    scale 2x image
    endcomment
    if crop
      assign m_src = src | image_url: width: m_width, height: m_height, crop: crop
      assign m_src_2x = src | image_url: width: m2x_width, height: m2x_height, crop: crop
      assign m_srcset = m_src | append: ", " | append: m_src_2x | append: ' 2x'

      assign t_src = src_tablet | image_url: width: t_width, height: t_height, crop: crop
      assign t_src_2x = src_tablet | image_url: width: t2x_width, height: t2x_height, crop: crop
      assign t_srcset = t_src | append: ", " | append: t_src_2x | append: ' 2x'

      assign d_src = src_desktop | image_url: width: d_width, height: d_height, crop: crop
      assign d_src_2x = src_desktop | image_url: width: d2x_width, height: d2x_height, crop: crop
      assign d_srcset = d_src | append: ", " | append: d_src_2x | append: ' 2x'

    else
      assign m_src = src | image_url: width: m_width, height: m_height, crop: false
      assign m_src_2x = src | image_url: width: m2x_width, height: m2x_height, crop: false
      assign m_srcset = m_src | append: ", " | append: m_src_2x | append: ' 2x'

      assign t_src = src_tablet | image_url: width: t_width, height: t_height, crop: false
      assign t_src_2x = src_tablet | image_url: width: t2x_width, height: t2x_height, crop: false
      assign t_srcset = t_src | append: ", " | append: t_src_2x | append: ' 2x'

      assign d_src = src_desktop | image_url: width: d_width, height: d_height, crop: false
      assign d_src_2x = src_desktop | image_url: width: d2x_width, height: d2x_height, crop: false
      assign d_srcset = d_src | append: ", " | append: d_src_2x | append: ' 2x'

    endif
  endif

  assign width = m_width
  assign height = m_height | default: width

  if classes
    assign classesValue = classes
  endif

  if lazyload
    assign loadingValue = "lazy"
  else
    assign loadingValue = "eager"
  endif

  if fetchpriority == "high"
    assign fetchpriorityValue = "high"
  elsif fetchpriority == "low"
    assign fetchpriorityValue = "low"
  else
    assign fetchpriorityValue = "auto"
  endif

  if template contains 'product'
    assign altValue = alt | default: product.title
  else
    assign altValue = alt | default: 'image description'
  endif
%}

<picture>
  {% unless asset_url %}
    <source srcset="{{ m_srcset }}" media="(max-width: 767px)">
    {% if src_tablet and src_t %}
      <source srcset="{{ t_srcset }}" media="(max-width: 1199px)">
    {% endif %}
    {% if src_desktop %}
      <source srcset="{{ d_srcset }}">
    {% endif %}
  {% endunless %}
  {% if asset_img_url or asset_url %}
    <img
      src="{{ m_src }}"
      {% if classes %}
        class="{{ classes }}"
      {% endif %}
      width="{{ width }}"
      height="{{ height }}"
      {% if lazyload %}
        loading="lazy"
      {% else %}
        loading="eager"
      {% endif %}
      {% if template contains 'product' %}
        alt="{{ alt | default: product.title }}"
      {% else %}
        alt="{{ alt | default: 'image description' }}"
      {% endif %}
      {{ data_attribute }}
      {% if fetchpriority == 'high' %}
        fetchpriority="high"
      {% elsif fetchpriority == 'low' %}
        fetchpriority="low"
      {% else %}
        fetchpriority="auto"
      {% endif %}
    >
  {% else %}
    {{ m_src | image_url: width: width, height: height | image_tag: class: classesValue, loading: loadingValue, alt: altValue, fetchpriority: fetchpriorityValue }}
  {% endif %}
</picture>
